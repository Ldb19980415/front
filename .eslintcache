[{"D:\\project2git\\front\\src\\reportWebVitals.js":"1","D:\\project2git\\front\\src\\page\\index.tsx":"2","D:\\project2git\\front\\src\\page\\Home\\index.tsx":"3","D:\\project2git\\front\\src\\App.tsx":"4","D:\\project2git\\front\\src\\worker\\index.js":"5","D:\\project2git\\front\\src\\worker\\user.tsx":"6","D:\\project2git\\front\\src\\page\\Login\\index.tsx":"7","D:\\project2git\\front\\src\\component\\Icon\\index.tsx":"8","D:\\project2git\\front\\src\\component\\index.tsx":"9","D:\\project2git\\front\\src\\component\\IconTypes.js":"10","D:\\project2git\\front\\src\\page\\userAntd\\index.tsx":"11","D:\\project2git\\front\\src\\page\\userAntd\\ButtonUse\\index.tsx":"12","D:\\project2git\\front\\src\\index.tsx":"13","D:\\project2git\\front\\src\\component\\MenuView\\index.tsx":"14","D:\\project2git\\front\\src\\constData\\menus.ts":"15","D:\\project2git\\front\\src\\worker\\api.js":"16","D:\\project2git\\front\\src\\page\\Header\\index.tsx":"17","D:\\project2git\\front\\src\\page\\game\\index.ts":"18","D:\\project2git\\front\\src\\page\\game\\Snack\\index.tsx":"19","D:\\project2git\\front\\src\\page\\game\\Snack\\snack.ts":"20","D:\\project2git\\front\\src\\page\\userAntd\\IconUse\\index.tsx":"21","D:\\project2git\\front\\src\\page\\userAntd\\TypographyUse\\index.tsx":"22","D:\\project2git\\front\\src\\page\\userAntd\\DividerUse\\index.tsx":"23","D:\\project2git\\front\\src\\page\\userAntd\\GridUse\\index.tsx":"24"},{"size":362,"mtime":1610779623775,"results":"25","hashOfConfig":"26"},{"size":1240,"mtime":1612148702675,"results":"27","hashOfConfig":"26"},{"size":460,"mtime":1612193914056,"results":"28","hashOfConfig":"26"},{"size":418,"mtime":1611918767166,"results":"29","hashOfConfig":"26"},{"size":61,"mtime":1611896946077,"results":"30","hashOfConfig":"26"},{"size":1834,"mtime":1612071130621,"results":"31","hashOfConfig":"26"},{"size":1831,"mtime":1612071354243,"results":"32","hashOfConfig":"26"},{"size":681,"mtime":1611727729863,"results":"33","hashOfConfig":"26"},{"size":104,"mtime":1611727455624,"results":"34","hashOfConfig":"26"},{"size":233,"mtime":1611727735809,"results":"35","hashOfConfig":"26"},{"size":405,"mtime":1612324074106,"results":"36","hashOfConfig":"26"},{"size":3037,"mtime":1612260868601,"results":"37","hashOfConfig":"26"},{"size":583,"mtime":1611897076963,"results":"38","hashOfConfig":"26"},{"size":1612,"mtime":1612323555448,"results":"39","hashOfConfig":"26"},{"size":895,"mtime":1612324118676,"results":"40","hashOfConfig":"26"},{"size":225,"mtime":1611659289695,"results":"41","hashOfConfig":"26"},{"size":1275,"mtime":1612192828293,"results":"42","hashOfConfig":"26"},{"size":78,"mtime":1612148464818,"results":"43","hashOfConfig":"26"},{"size":6355,"mtime":1612233831130,"results":"44","hashOfConfig":"26"},{"size":2633,"mtime":1612191334666,"results":"45","hashOfConfig":"26"},{"size":1800,"mtime":1612321926137,"results":"46","hashOfConfig":"26"},{"size":4541,"mtime":1612322895910,"results":"47","hashOfConfig":"26"},{"size":1286,"mtime":1612323987315,"results":"48","hashOfConfig":"26"},{"size":1286,"mtime":1612324048817,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"u2epql",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\project2git\\front\\src\\reportWebVitals.js",[],["110","111"],"D:\\project2git\\front\\src\\page\\index.tsx",["112"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Home from \"./Home\";\r\nimport s from \"./index.module.scss\";\r\nimport MenuView from \"../component/MenuView\";\r\nimport useAntd from \"./userAntd\";\r\nimport { observer } from \"mobx-react\";\r\nimport ButtonUse from \"./userAntd/ButtonUse\";\r\nimport Header from \"./Header\";\r\nimport game from \"./game\";\r\nconst routes = {\r\n  \"/home\": Home,\r\n  ...useAntd,\r\n  ...game,\r\n};\r\n\r\nconst appRouter = () => {\r\n  return (\r\n    <Switch>\r\n      {Object.keys(routes).map((item: string) => (\r\n        <Route path={item} key={item} component={routes[item]} exact />\r\n      ))}\r\n      <Route path=\"/\" key=\"allTo\" component={Home} />\r\n    </Switch>\r\n  );\r\n};\r\n@observer\r\nexport default class Page extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={s[\"container\"]}>\r\n        <Router>\r\n          <div className={s[\"fixedHeader\"]}>\r\n            <Header />\r\n          </div>\r\n          <div className={s[\"contentBox\"]}>\r\n            <div className={s[\"sider\"]}>\r\n              <MenuView />\r\n            </div>\r\n            <div className={s[\"content\"]}>{appRouter()}</div>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",["113","114"],"D:\\project2git\\front\\src\\page\\Home\\index.tsx",[],"D:\\project2git\\front\\src\\App.tsx",[],"D:\\project2git\\front\\src\\worker\\index.js",["115"],"import user from './user'\r\n\r\n\r\nexport default {\r\n    user,\r\n}","D:\\project2git\\front\\src\\worker\\user.tsx",[],"D:\\project2git\\front\\src\\page\\Login\\index.tsx",["116","117","118"],"import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { observable } from \"mobx\";\r\nimport { Form, Input, Checkbox, Row, Col, Button } from \"antd\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport s from \"./index.module.scss\";\r\nconst layout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n@inject(\"user\")\r\n@observer\r\nexport default class Login extends React.Component<any, any> {\r\n  // 发送登录请求，请求成功就把user里面的islogin置为true\r\n  // 并且使用browserHistory进行页面跳转browserHistory.push(\"/home\");\r\n  @observable loading: boolean = false;\r\n\r\n  formRef = React.createRef<FormInstance>();\r\n  clickLogin = async(values: any) => {\r\n    await this.props['user'].login(values)\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={s[\"container\"]}>\r\n        <div className={s[\"loginBox\"]}>\r\n          <h1>登录</h1>\r\n          <Form ref={this.formRef} {...layout} onFinish={this.clickLogin}>\r\n            <Form.Item\r\n              label=\"用户名\"\r\n              name=\"username\"\r\n              rules={[{ required: true, message: \"用户名不能为空\" }]}\r\n            >\r\n              <Input placeholder=\"请输入用户名\" autoComplete=\"off\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"密码\"\r\n              name=\"password\"\r\n              rules={[{ required: true, message: \"密码不能为空\" }]}\r\n            >\r\n              <Input.Password placeholder=\"请输入用户名\" autoComplete=\"off\" />\r\n            </Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              size=\"large\"\r\n              style={{ marginTop: \"40px\" }}\r\n            >\r\n              登录\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\project2git\\front\\src\\component\\Icon\\index.tsx",[],"D:\\project2git\\front\\src\\component\\index.tsx",[],"D:\\project2git\\front\\src\\component\\IconTypes.js",[],"D:\\project2git\\front\\src\\page\\userAntd\\index.tsx",["119"],"D:\\project2git\\front\\src\\page\\userAntd\\ButtonUse\\index.tsx",["120"],"import React from \"react\";\r\n\r\nimport s from \"./index.module.scss\";\r\n\r\ninterface Iprops {}\r\n\r\nconst data = [\r\n  {\r\n    title: \"四种状态：\",\r\n    children: [\r\n      \"危险：删除/移动/修改权限等危险操作，一般需要二次确认。\",\r\n      \"禁用：行动点不可用的时候，一般需要文案解释。\",\r\n      \"幽灵：用于背景色比较复杂的地方，常用在首页/产品页等展示场景。\",\r\n      \"加载中：用于异步操作等待反馈的时候，也可以避免多次提交。\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"使用：import {Button} from `antd`\",\r\n  },\r\n  {\r\n    title: \"属性说明：\",\r\n    children: [\r\n      \"block:boolean --> 由行间块状元素变成块状元素，其宽度调整为父元素的宽度\",\r\n      \"danger:boolean --> 设置危险按钮\",\r\n      \"disabled:boolean --> 按钮失效状态\",\r\n      \"ghost:boolean --> 幽灵属性，使按钮背景透明(丧失背景，融入到环境中)\",\r\n      \"href:string --> 点击跳转的地址，指定此属性 button 的行为和 a 链接一致。a标签的href是直接填个地址，如 http://xxx.com/\",\r\n      \"htmlType:string --> 设置 button 原生的 type值。这里我好像就用过submit和默认的fefault。注意这里只接受string类型，在三元判断的时候不能写空，至少写default\",\r\n      \"icon:ReactNode --> 设置按钮的图标组件，比如<Button type=`primary` shape=`round` icon={<DownloadOutlined />} size={size} />，标签自闭合，icon将会替代之前文本的位置，如果不自闭合，有文本，icon与文本都包裹在Button内\",\r\n      \"loading:boolean --> 设置按钮进入载入状态。这个一般用于搜索按钮之类的，当上一个请求还没有回来不能进行下一个请求\",\r\n      \"shape:string --> 设置按钮形状。circle,round\",\r\n      \"size:string --> 设置按钮大小。large|middle|small\",\r\n      \"target:string --> 相当于a链接的target属性，当href存在时生效。\",\r\n      \"type:string --> 设置按钮的类型：primary | ghost | dashed | link | text | default\",\r\n      \"onClick:(event) => void  --> 点击按钮的回调\"\r\n    ],\r\n  },\r\n  {\r\n    title:\"FAQ\",\r\n    children:[\r\n      \"如何移除两个汉字之间的空格？\",\r\n      \"默认情况下，如果button中的文字只有两时，会在两字之间加间隔。通过设置autoInsertSpaceInButton 为 false去除。\"\r\n\r\n    ]\r\n  }\r\n];\r\nexport default class ButtonUse extends React.Component<any, any> {\r\n  render() {\r\n    // console.log(this.props);\r\n\r\n    return (\r\n      <div className={s[\"container\"]}>\r\n        {data.map((item, index) => {\r\n          if (item?.children?.length) {\r\n            return(\r\n              <>\r\n              <h2 key={index}>{item.title}</h2>\r\n              {\r\n                item.children.map((context,idx) => <p key={idx}>{context}</p> )\r\n              }\r\n              </>\r\n            ) \r\n          } else {\r\n            return <h2 key={index}>{item.title}</h2>\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\project2git\\front\\src\\index.tsx",[],"D:\\project2git\\front\\src\\component\\MenuView\\index.tsx",[],"D:\\project2git\\front\\src\\constData\\menus.ts",[],"D:\\project2git\\front\\src\\worker\\api.js",["121"],"let host = ''\r\nif (process.env.NODE_ENV == 'production') {\r\n    host = 'http://39.98.146.215:80/api'\r\n}\r\n\r\nconst host_api = {\r\n    auth_login: `${host}/auth/login`, // 登录,post \r\n}\r\n\r\n\r\nexport {\r\n    host_api,\r\n    host\r\n}","D:\\project2git\\front\\src\\page\\Header\\index.tsx",[],"D:\\project2git\\front\\src\\page\\game\\index.ts",["122"],"import Snack from './Snack'\r\n\r\n\r\nexport default {\r\n    \"/game/snack\" :Snack\r\n}","D:\\project2git\\front\\src\\page\\game\\Snack\\index.tsx",["123","124","125","126","127","128","129","130"],"import React from \"react\";\r\nimport s from \"./index.module.scss\";\r\nimport { Button, message } from \"antd\";\r\nimport snack from \"./snack\";\r\nimport { observer } from \"mobx-react\";\r\n\r\ninterface Istates {\r\n  timer: NodeJS.Timeout | undefined;\r\n}\r\n\r\n@observer\r\nexport default class Snack extends React.Component {\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.onKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.onKeyDown);\r\n  }\r\n\r\n  onKeyDown = (e) => {\r\n    switch (e.keyCode) {\r\n      case 37:\r\n        //left\r\n        if (snack.direction !== \"right\") {\r\n          snack.direction = \"left\";\r\n        }\r\n        break;\r\n      case 38:\r\n        //top\r\n        if (snack.direction !== \"bottom\") {\r\n          snack.direction = \"top\";\r\n        }\r\n        break;\r\n      case 39:\r\n        //left\r\n        if (snack.direction !== \"left\") {\r\n          snack.direction = \"right\";\r\n        }\r\n        break;\r\n      case 40:\r\n        //left\r\n        if (snack.direction !== \"top\") {\r\n          snack.direction = \"bottom\";\r\n        }\r\n        break;\r\n    }\r\n  };\r\n  state = {\r\n    stop: false,\r\n    timer: undefined,\r\n    foodPoint: {\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    speed:100/2,\r\n    level:1\r\n  };\r\n  startGame = () => {\r\n    clearInterval(this.state.timer);\r\n    this.setState({\r\n      stop: false,\r\n      foodPoint: snack.foodPoint,\r\n    });\r\n    let timer = setInterval(() => {\r\n        if(this.state.stop){\r\n            clearInterval(this.state.timer);\r\n            return\r\n        }\r\n      let nextPoint = {\r\n        x: 0,\r\n        y: 0,\r\n      };\r\n      switch (snack.direction) {\r\n        case \"right\":\r\n          nextPoint.x = snack.header.x + 1;\r\n          nextPoint.y = snack.header.y;\r\n          break;\r\n        case \"bottom\":\r\n          nextPoint.x = snack.header.x;\r\n          nextPoint.y = snack.header.y + 1;\r\n          break;\r\n        case \"left\":\r\n          nextPoint.x = snack.header.x - 1;\r\n          nextPoint.y = snack.header.y;\r\n          break;\r\n        case \"top\":\r\n          nextPoint.x = snack.header.x;\r\n          nextPoint.y = snack.header.y - 1;\r\n          break;\r\n      }\r\n      let snackPoint = [snack.tail, ...snack.body, snack.header];\r\n      console.log(snackPoint.indexOf(\r\n        (item) => item.x === nextPoint.x && item.y === nextPoint.y\r\n      ) > -1);\r\n      console.log(snackPoint,nextPoint);\r\n      \r\n      if (\r\n        snackPoint.indexOf(\r\n          (item) => item.x == nextPoint.x && item.y == nextPoint.y\r\n        ) > -1\r\n      ) {\r\n        message.error(\"笨蛋，撞到自己了\");\r\n        setTimeout(() => {\r\n          snack.reset();\r\n        }, 1000);\r\n        clearInterval(this.state.timer);\r\n        return\r\n      }\r\n      console.log(nextPoint.x, nextPoint.y, \"food\");\r\n      console.log(snack.header.x, snack.header.y, \"header\");\r\n      if (\r\n        nextPoint.x == this.state.foodPoint?.x &&\r\n        nextPoint.y == this.state.foodPoint?.y\r\n      ) {\r\n        message.info(\"吃到食物\");\r\n        snack.eatFood();\r\n        snack.showFood();\r\n        this.setState({\r\n          foodPoint: snack.foodPoint,\r\n        });\r\n      } else if (\r\n        nextPoint.x >= 0 &&\r\n        nextPoint.x <= 44 &&\r\n        nextPoint.y >= 0 &&\r\n        nextPoint.y <= 29\r\n      ) {\r\n        snack.move();\r\n      } else {\r\n        message.error(\"笨蛋，撞死了\");\r\n        setTimeout(() => {\r\n          snack.reset();\r\n        }, 1000);\r\n        this.setState({\r\n          stop: false,\r\n        });\r\n        clearInterval(this.state.timer);\r\n      }\r\n    }, this.state.speed);\r\n    this.setState({\r\n      timer,\r\n    });\r\n  };\r\n  changeLevel = (level) => {\r\n\r\n      this.setState({level,speed:level*100/2})\r\n  }\r\n  render() {\r\n    let snackPoint = [snack.tail, ...snack.body, snack.header];\r\n    console.log(snackPoint.length);\r\n    console.log(snack.foodPoint, \"==========\");\r\n\r\n    let snackLength = snackPoint.length;\r\n    return (\r\n      <div className={s[\"container\"]}>\r\n        <div className={s[\"map\"]}>\r\n          {snackPoint.map((item, index) =>\r\n            renderPoint(item, index, snackLength)\r\n          )}\r\n          {renderFood(snack.foodPoint)}\r\n          <Button\r\n            type=\"primary\"\r\n            className={s[\"startGame\"]}\r\n            onClick={this.startGame}\r\n          >\r\n            开始游戏\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            className={s[\"stopGame\"]}\r\n            onClick={() => {\r\n              this.setState({\r\n                stop: true,\r\n              });\r\n            }}\r\n          >\r\n            暂停游戏\r\n          </Button>\r\n          <div className={s['gameLevel']}>\r\n              {[1,2,3,4,5,6,7,8,9].map((item,index)=> <Button key={index} type={this.state.level == item ? 'primary' :'default'} onClick={this.changeLevel.bind(this,item)}>{item}级</Button>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst renderFood = (point: any) => (\r\n  <span\r\n    style={{\r\n      display: \"inline-block\",\r\n      width: \"20px\",\r\n      height: \"20px\",\r\n      position: \"absolute\",\r\n      left: `${point.x * 20}px `,\r\n      top: `${point.y * 20}px`,\r\n      background: \"black\",\r\n      borderRadius: \"50%\",\r\n    }}\r\n  ></span>\r\n);\r\n\r\nconst renderPoint = (point: any, index: number, snackLength: number) => {\r\n  if (index == 0) {\r\n    return (\r\n      <span\r\n        key={index}\r\n        style={{\r\n          display: \"inline-block\",\r\n          width: \"20px\",\r\n          height: \"20px\",\r\n          position: \"absolute\",\r\n          left: `${point.x * 20}px `,\r\n          top: `${point.y * 20}px`,\r\n          background: \"blue\",\r\n        }}\r\n      ></span>\r\n    );\r\n  }\r\n  if (index == snackLength - 1) {\r\n    return (\r\n      <span\r\n        key={index}\r\n        style={{\r\n          display: \"inline-block\",\r\n          width: \"20px\",\r\n          height: \"20px\",\r\n          position: \"absolute\",\r\n          left: `${point.x * 20}px `,\r\n          top: `${point.y * 20}px`,\r\n          background: \"yellow\",\r\n        }}\r\n      ></span>\r\n    );\r\n  }\r\n  return (\r\n    <span\r\n      key={index}\r\n      style={{\r\n        display: \"inline-block\",\r\n        width: \"20px\",\r\n        height: \"20px\",\r\n        position: \"absolute\",\r\n        left: `${point.x * 20}px `,\r\n        top: `${point.y * 20}px`,\r\n        background: \"red\",\r\n      }}\r\n    ></span>\r\n  );\r\n};\r\n","D:\\project2git\\front\\src\\page\\game\\Snack\\snack.ts",["131","132","133"],"\r\nimport { makeAutoObservable } from \"mobx\";\r\ninterface point {\r\n    x:number\r\n    y:number\r\n}\r\n\r\nclass Snack {\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n        this.showFood()\r\n    }\r\n\r\n    public header:point = {\r\n        x : 2,\r\n        y : 0,\r\n    }\r\n    public tail :any ={\r\n        x : 0,\r\n        y : 0\r\n    }\r\n    public body : [point] = [{x:1,y:0}]\r\n\r\n    direction = 'right'\r\n\r\n    reset = () => {\r\n        this.direction ='right'\r\n        this.header = {\r\n            x : 2,\r\n            y : 0,\r\n        }\r\n        this.body = [{x:1,y:0}]\r\n        this.tail = {\r\n            x : 0,\r\n            y : 0\r\n        }\r\n    }\r\n    foodPoint:point = {\r\n        x : 10,\r\n        y : 10\r\n    }\r\n    showFood = () => {\r\n        let point = createFood()\r\n        let snackPoints = [this.header,...this.body,this.tail]\r\n        let index =  snackPoints.indexOf((item)=> item.x == point.x && item.y == point.y)  \r\n        if (index == -1) {\r\n            this.foodPoint = point\r\n        }else{\r\n            this.showFood()\r\n        }\r\n    }\r\n    eatFood = () => {\r\n        this.body.unshift(this.header)\r\n        this.header = {...this.foodPoint}\r\n        // this.tail = this.body.pop()\r\n    }\r\n    move = () => {\r\n        switch (this.direction) {\r\n            case 'right':\r\n                this.body.unshift(this.header)\r\n                this.header = {\r\n                    x : this.header.x + 1,\r\n                    y : this.header.y\r\n                }\r\n                this.tail = this.body.pop()\r\n                break;\r\n            case 'bottom':\r\n                this.body.unshift(this.header)\r\n                this.header = {\r\n                    x : this.header.x ,\r\n                    y : this.header.y + 1\r\n                }\r\n                this.tail = this.body.pop()\r\n                break;\r\n            case 'left':\r\n                this.body.unshift(this.header)\r\n                this.header = {\r\n                    x : this.header.x - 1,\r\n                    y : this.header.y \r\n                }\r\n                this.tail = this.body.pop()\r\n                break;\r\n            case 'top':\r\n                this.body.unshift(this.header)\r\n                this.header = {\r\n                    x : this.header.x ,\r\n                    y : this.header.y - 1\r\n                }\r\n                this.tail = this.body.pop()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nconst  createFood = () => {\r\n    let x = Math.floor( Math.random() * 43)\r\n    let y = Math.floor(Math.random()* 28 )\r\n    return {x,y}\r\n}\r\nconst snack = new Snack() \r\nexport default snack","D:\\project2git\\front\\src\\page\\userAntd\\IconUse\\index.tsx",["134"],"import React from \"react\";\r\nimport s from \"./index.module.scss\";\r\n\r\n\r\n\r\ninterface Iprops {}\r\n\r\n\r\nconst data = [\r\n  {\r\n    title: \"一种办法是使用antd提供的图标，一种办法是使用阿里巴巴矢量图标库提供的图标\",\r\n    children: [\r\n      \"使用antd提供的图标：import {IconName} from `@ant-design/icons`, <IconName />\",\r\n      \"使用阿里巴巴矢量图标库提供的图标：详见本代码里面的Icon组件的使用。\"\r\n    ],\r\n  },\r\n  {\r\n    title:\"属性参数一览：\",\r\n    children:[\r\n      \"className:string  --> 设置图标的样式名。提供给它类名，就能提供类给它设置样式了。\",\r\n      \"rotate:number  --> 图标旋转角度(IE9无效)\",\r\n      \"spin:boolean  --> 是否有旋转动画\",\r\n      \"style:css  --> 设置图标的样式。设置后为行间样式\",\r\n      \"twoToneColor:string(16进制颜色) --> 仅适用双色图标。设置双色图标的主要颜色\",\r\n    ]\r\n  },\r\n  {\r\n    title:'自定义Icon接受的属性：',\r\n    children:[\r\n      \"className: \",\r\n      \"fill:  svg的填充色\",\r\n      \"height:string|number ,默认为1em\",\r\n      \"style:css\",\r\n      \"width:string|number,默认为1em  svg的宽度\"\r\n    ]\r\n  }\r\n];\r\nexport default class TypographyUse extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n      <div className={s[\"container\"]}>\r\n        {data.map((item, index) => {\r\n          if (item?.children?.length) {\r\n            return(\r\n              <>\r\n              <h2 key={index}>{item.title}</h2>\r\n              {\r\n                item.children.map((context,idx) => <p key={idx}>{context}</p> )\r\n              }\r\n              </>\r\n            ) \r\n          } else {\r\n            return <h2 key={index}>{item.title}</h2>\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\project2git\\front\\src\\page\\userAntd\\TypographyUse\\index.tsx",["135"],"import React from \"react\";\r\nimport {Typography} from 'antd'\r\nimport s from \"./index.module.scss\";\r\n\r\n\r\n\r\nconst {Title} = Typography\r\n\r\ninterface Iprops {}\r\n\r\nconst data = [\r\n  {\r\n    title: \"Typography排版\",\r\n    children: [\r\n      \"文本的基本格式。\",\r\n    ],\r\n  },\r\n  {\r\n    title:'何时适用：',\r\n    children:[\r\n      \"当需要展示标题、段落、列表内容时使用，如文章/博客/日志的文本样式。\",\r\n      \"当需要一列基于文本的基础操作时，如拷贝/省略/可编辑。\",\r\n      \"给我的感觉就是它主要是把平时我们对文本的常用功能抽离出来形成带功能的组件，方便适用。\"\r\n    ]\r\n  },\r\n  {\r\n    title:\"title的使用：\",\r\n    children : [\r\n      \"import {Typography} from `antd` \",\r\n      \"const {Title} = Typography\",\r\n      \"<Title>标题的内容</Title>\",\r\n      \"可用属性：\",\r\n      \"code:boolean  --> 添加代码样式\",\r\n      \"copyable:boolean|自定义设置 --> 是否可拷贝，为对象时进行各种自定义。\",\r\n      \"delete:boolean --> 添加删除样式线\",\r\n      \"editable:boolean|editable --> 是否可编辑，为对象时可对编辑进行控制\",\r\n      \"ellipsis:boolean|ellipsis --> 自动溢出省略，为对象时可设置省略行数、是否可展开、添加后缀等\",\r\n      \"level:number[1,2,3,4,5] --> 重要程度，相当于h1、h2、h3、h4、h5\",\r\n      \"mark:boolean --> 添加标记样式,我试了一下，大概就是文本被加了背景色以标记\",\r\n      \"type:secondary(灰色)|success(绿色)|warning(橙色)|danger(红色)\",\r\n      \"underline:boolean  --> 添加下划线样式\",\r\n      \"onChange:Function  (string)=> -->用户提交编辑内容时触发\"\r\n    ]\r\n  },\r\n  {\r\n    title:\"Text的使用：\",\r\n    children : [\r\n      \"import {Typography} from `antd` \",\r\n      \"const {Text} = Typography\",\r\n      \"<Text>文本的内容</Text>\",\r\n      \"可用属性：\",\r\n      \"code:boolean  --> 添加代码样式\",\r\n      \"copyable:boolean|自定义设置 --> 是否可拷贝，为对象时进行各种自定义。\",\r\n      \"delete:boolean --> 添加删除样式线\",\r\n      \"editable:boolean|editable --> 是否可编辑，为对象时可对编辑进行控制\",\r\n      \"ellipsis:boolean|ellipsis --> 自动溢出省略，为对象时可设置省略行数、是否可展开、添加后缀等\",\r\n      \"keyboard:boolean --> 添加键盘样式\",\r\n      \"mark:boolean --> 添加标记样式,我试了一下，大概就是文本被加了背景色以标记\",\r\n      \"type:secondary(灰色)|success(绿色)|warning(橙色)|danger(红色)\",\r\n      \"underline:boolean  --> 添加下划线样式\"\r\n    ]\r\n  },\r\n  {\r\n    title:\"Paragraph的使用：\",\r\n    children : [\r\n      \"import {Typography} from `antd` \",\r\n      \"const {Paragraph} = Typography\",\r\n      \"<Paragraph>Paragraph的内容</Paragraph>\",\r\n      \"可用属性：\",\r\n      \"code:boolean  --> 添加代码样式\",\r\n      \"copyable:boolean|自定义设置 --> 是否可拷贝，为对象时进行各种自定义。\",\r\n      \"delete:boolean --> 添加删除样式线\",\r\n      \"editable:boolean|editable --> 是否可编辑，为对象时可对编辑进行控制\",\r\n      \"ellipsis:boolean|ellipsis --> 自动溢出省略，为对象时可设置省略行数、是否可展开、添加后缀等\",\r\n      \"keyboard:boolean --> 添加键盘样式\",\r\n      \"mark:boolean --> 添加标记样式,我试了一下，大概就是文本被加了背景色以标记\",\r\n      \"type:secondary(灰色)|success(绿色)|warning(橙色)|danger(红色)\",\r\n      \"underline:boolean  --> 添加下划线样式\",\r\n      \"strong:boolean --> 是否加粗\",\r\n      \"onChange:Function  (string)=> -->用户提交编辑内容时触发\"\r\n    ]\r\n  }\r\n  \r\n];\r\nexport default class IconUse extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n      <div className={s[\"container\"]}>\r\n        <Title code={true}>code属性为true的时候的状态 var a = 10</Title>\r\n        <Title code={false} mark={false}>code属性为false的时候的状态,那就是普通标题，默认等级为h1： var a = 10</Title>\r\n\r\n        {data.map((item, index) => {\r\n          if (item?.children?.length) {\r\n            return(\r\n              <>\r\n              <h2 key={index}>{item.title}</h2>\r\n              {\r\n                item.children.map((context,idx) => <p key={idx}>{context}</p> )\r\n              }\r\n              </>\r\n            ) \r\n          } else {\r\n            return <h2 key={index}>{item.title}</h2>\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\project2git\\front\\src\\page\\userAntd\\DividerUse\\index.tsx",["136"],"D:\\project2git\\front\\src\\page\\userAntd\\GridUse\\index.tsx",["137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":17},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"146","severity":1,"message":"147","line":4,"column":1,"nodeType":"148","endLine":6,"endColumn":2},{"ruleId":"142","severity":1,"message":"149","line":4,"column":23,"nodeType":"144","messageId":"145","endLine":4,"endColumn":31},{"ruleId":"142","severity":1,"message":"150","line":4,"column":33,"nodeType":"144","messageId":"145","endLine":4,"endColumn":36},{"ruleId":"142","severity":1,"message":"151","line":4,"column":38,"nodeType":"144","messageId":"145","endLine":4,"endColumn":41},{"ruleId":"146","severity":1,"message":"147","line":7,"column":1,"nodeType":"148","endLine":13,"endColumn":2},{"ruleId":"142","severity":1,"message":"152","line":5,"column":11,"nodeType":"144","messageId":"145","endLine":5,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":2,"column":26,"nodeType":"155","messageId":"156","endLine":2,"endColumn":28},{"ruleId":"146","severity":1,"message":"147","line":4,"column":1,"nodeType":"148","endLine":6,"endColumn":2},{"ruleId":"142","severity":1,"message":"157","line":7,"column":11,"nodeType":"144","messageId":"145","endLine":7,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":100,"column":28,"nodeType":"155","messageId":"156","endLine":100,"endColumn":30},{"ruleId":"153","severity":1,"message":"154","line":100,"column":53,"nodeType":"155","messageId":"156","endLine":100,"endColumn":55},{"ruleId":"153","severity":1,"message":"154","line":113,"column":21,"nodeType":"155","messageId":"156","endLine":113,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":114,"column":21,"nodeType":"155","messageId":"156","endLine":114,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":180,"column":98,"nodeType":"155","messageId":"156","endLine":180,"endColumn":100},{"ruleId":"153","severity":1,"message":"154","line":204,"column":13,"nodeType":"155","messageId":"156","endLine":204,"endColumn":15},{"ruleId":"153","severity":1,"message":"154","line":220,"column":13,"nodeType":"155","messageId":"156","endLine":220,"endColumn":15},{"ruleId":"153","severity":1,"message":"154","line":45,"column":58,"nodeType":"155","messageId":"156","endLine":45,"endColumn":60},{"ruleId":"153","severity":1,"message":"154","line":45,"column":79,"nodeType":"155","messageId":"156","endLine":45,"endColumn":81},{"ruleId":"153","severity":1,"message":"154","line":46,"column":19,"nodeType":"155","messageId":"156","endLine":46,"endColumn":21},{"ruleId":"142","severity":1,"message":"152","line":6,"column":11,"nodeType":"144","messageId":"145","endLine":6,"endColumn":17},{"ruleId":"142","severity":1,"message":"152","line":9,"column":11,"nodeType":"144","messageId":"145","endLine":9,"endColumn":17},{"ruleId":"142","severity":1,"message":"152","line":3,"column":11,"nodeType":"144","messageId":"145","endLine":3,"endColumn":17},{"ruleId":"142","severity":1,"message":"152","line":3,"column":11,"nodeType":"144","messageId":"145","endLine":3,"endColumn":17},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"@typescript-eslint/no-unused-vars","'ButtonUse' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Checkbox' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Iprops' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Istates' is defined but never used.","no-global-assign","no-unsafe-negation"]