[{"D:\\project2git\\front\\src\\reportWebVitals.js":"1","D:\\project2git\\front\\src\\page\\index.tsx":"2","D:\\project2git\\front\\src\\page\\Home\\index.tsx":"3","D:\\project2git\\front\\src\\App.tsx":"4","D:\\project2git\\front\\src\\worker\\index.js":"5","D:\\project2git\\front\\src\\worker\\user.tsx":"6","D:\\project2git\\front\\src\\page\\Login\\index.tsx":"7","D:\\project2git\\front\\src\\component\\Icon\\index.tsx":"8","D:\\project2git\\front\\src\\component\\index.tsx":"9","D:\\project2git\\front\\src\\component\\IconTypes.js":"10","D:\\project2git\\front\\src\\page\\userAntd\\index.tsx":"11","D:\\project2git\\front\\src\\page\\userAntd\\ButtonUse\\index.tsx":"12","D:\\project2git\\front\\src\\index.tsx":"13","D:\\project2git\\front\\src\\component\\MenuView\\index.tsx":"14","D:\\project2git\\front\\src\\constData\\menus.ts":"15","D:\\project2git\\front\\src\\worker\\api.js":"16","D:\\project2git\\front\\src\\page\\Header\\index.tsx":"17","D:\\project2git\\front\\src\\page\\game\\index.ts":"18","D:\\project2git\\front\\src\\page\\game\\Snack\\index.tsx":"19","D:\\project2git\\front\\src\\page\\game\\Snack\\snack.ts":"20","D:\\project2git\\front\\src\\page\\userAntd\\IconUse\\index.tsx":"21","D:\\project2git\\front\\src\\page\\userAntd\\TypographyUse\\index.tsx":"22","D:\\project2git\\front\\src\\page\\userAntd\\DividerUse\\index.tsx":"23","D:\\project2git\\front\\src\\page\\userAntd\\GridUse\\index.tsx":"24","D:\\project2git\\front\\src\\page\\RecordWeight\\index.tsx":"25","D:\\project2git\\front\\src\\page\\d3Learn\\index.ts":"26","D:\\project2git\\front\\src\\page\\d3Learn\\HelloD3\\index.tsx":"27","D:\\project2git\\front\\src\\page\\useHook\\index.ts":"28","D:\\project2git\\front\\src\\page\\useHook\\HookUse1\\index.tsx":"29","D:\\project2git\\front\\src\\page\\useHook\\HookUse1\\Instance1\\index.tsx":"30","D:\\project2git\\front\\src\\page\\useHook\\HookUse1\\Instance2\\index.tsx":"31","D:\\project2git\\front\\src\\page\\other\\index.ts":"32","D:\\project2git\\front\\src\\page\\other\\TestRadio\\index.tsx":"33","D:\\project2git\\front\\src\\page\\browserHistory.ts":"34"},{"size":362,"mtime":1610779623775,"results":"35","hashOfConfig":"36"},{"size":1461,"mtime":1616571937927,"results":"37","hashOfConfig":"36"},{"size":460,"mtime":1612193914056,"results":"38","hashOfConfig":"36"},{"size":443,"mtime":1616571866515,"results":"39","hashOfConfig":"36"},{"size":61,"mtime":1611896946077,"results":"40","hashOfConfig":"36"},{"size":1898,"mtime":1614912301484,"results":"41","hashOfConfig":"36"},{"size":1831,"mtime":1612071354243,"results":"42","hashOfConfig":"36"},{"size":681,"mtime":1612345145373,"results":"43","hashOfConfig":"36"},{"size":104,"mtime":1611727455624,"results":"44","hashOfConfig":"36"},{"size":305,"mtime":1612345156800,"results":"45","hashOfConfig":"36"},{"size":405,"mtime":1612324074106,"results":"46","hashOfConfig":"36"},{"size":3037,"mtime":1612260868601,"results":"47","hashOfConfig":"36"},{"size":583,"mtime":1611897076963,"results":"48","hashOfConfig":"36"},{"size":1612,"mtime":1612323555448,"results":"49","hashOfConfig":"36"},{"size":1087,"mtime":1612837112772,"results":"50","hashOfConfig":"36"},{"size":358,"mtime":1612342122711,"results":"51","hashOfConfig":"36"},{"size":1275,"mtime":1612192828293,"results":"52","hashOfConfig":"36"},{"size":78,"mtime":1612148464818,"results":"53","hashOfConfig":"36"},{"size":6355,"mtime":1612233831130,"results":"54","hashOfConfig":"36"},{"size":2633,"mtime":1612191334666,"results":"55","hashOfConfig":"36"},{"size":1800,"mtime":1612321926137,"results":"56","hashOfConfig":"36"},{"size":4541,"mtime":1612322895910,"results":"57","hashOfConfig":"36"},{"size":1286,"mtime":1612323987315,"results":"58","hashOfConfig":"36"},{"size":1072,"mtime":1612330259284,"results":"59","hashOfConfig":"36"},{"size":4023,"mtime":1612346106336,"results":"60","hashOfConfig":"36"},{"size":90,"mtime":1612836982947,"results":"61","hashOfConfig":"36"},{"size":1382,"mtime":1614759777790,"results":"62","hashOfConfig":"36"},{"size":87,"mtime":1612928468653,"results":"63","hashOfConfig":"36"},{"size":605,"mtime":1612935822264,"results":"64","hashOfConfig":"36"},{"size":342,"mtime":1612928570413,"results":"65","hashOfConfig":"36"},{"size":482,"mtime":1612935762328,"results":"66","hashOfConfig":"36"},{"size":88,"mtime":1613272113021,"results":"67","hashOfConfig":"36"},{"size":2407,"mtime":1613302198763,"results":"68","hashOfConfig":"36"},{"size":102,"mtime":1614759698745,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"17g3tmy",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"77"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"77"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"77"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"77"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"77"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"77"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"77"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"77"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"77"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"77"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"77"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"77"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"77"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"77"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"77"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"D:\\project2git\\front\\src\\reportWebVitals.js",[],["160","161"],"D:\\project2git\\front\\src\\page\\index.tsx",[],"D:\\project2git\\front\\src\\page\\Home\\index.tsx",[],["162","163"],"D:\\project2git\\front\\src\\App.tsx",["164"],"import React from \"react\";\nimport LoginPage from \"./page/Login\";\nimport LayoutPage from \"./page\";\nimport { inject, observer } from \"mobx-react\";\nimport \"./App.scss\";\n\ninterface Iprops {\n  user?:any\n} \n@inject(\"user\")\n@observer\nexport default class App extends React.Component<Iprops , any> {\n  render() {\n    return (\n      // <div>{this.props.user.isLogin === 'true' ? <LayoutPage /> : <LoginPage />}</div>\n      <LayoutPage /> \n    );\n  }\n}\n","D:\\project2git\\front\\src\\worker\\index.js",["165"],"import user from './user'\r\n\r\n\r\nexport default {\r\n    user,\r\n}","D:\\project2git\\front\\src\\worker\\user.tsx",[],"D:\\project2git\\front\\src\\page\\Login\\index.tsx",["166","167","168"],"import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { observable } from \"mobx\";\r\nimport { Form, Input, Checkbox, Row, Col, Button } from \"antd\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport s from \"./index.module.scss\";\r\nconst layout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n@inject(\"user\")\r\n@observer\r\nexport default class Login extends React.Component<any, any> {\r\n  // 发送登录请求，请求成功就把user里面的islogin置为true\r\n  // 并且使用browserHistory进行页面跳转browserHistory.push(\"/home\");\r\n  @observable loading: boolean = false;\r\n\r\n  formRef = React.createRef<FormInstance>();\r\n  clickLogin = async(values: any) => {\r\n    await this.props['user'].login(values)\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={s[\"container\"]}>\r\n        <div className={s[\"loginBox\"]}>\r\n          <h1>登录</h1>\r\n          <Form ref={this.formRef} {...layout} onFinish={this.clickLogin}>\r\n            <Form.Item\r\n              label=\"用户名\"\r\n              name=\"username\"\r\n              rules={[{ required: true, message: \"用户名不能为空\" }]}\r\n            >\r\n              <Input placeholder=\"请输入用户名\" autoComplete=\"off\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"密码\"\r\n              name=\"password\"\r\n              rules={[{ required: true, message: \"密码不能为空\" }]}\r\n            >\r\n              <Input.Password placeholder=\"请输入用户名\" autoComplete=\"off\" />\r\n            </Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              size=\"large\"\r\n              style={{ marginTop: \"40px\" }}\r\n            >\r\n              登录\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\project2git\\front\\src\\component\\Icon\\index.tsx",[],"D:\\project2git\\front\\src\\component\\index.tsx",[],"D:\\project2git\\front\\src\\component\\IconTypes.js",[],"D:\\project2git\\front\\src\\page\\userAntd\\index.tsx",["169"],"import ButtonUse from './ButtonUse'\r\nimport IconUse from './IconUse'\r\nimport TypographyUse from './TypographyUse'\r\nimport DividerUse from './DividerUse'\r\nimport GridUse from './GridUse'\r\n\r\nexport default {\r\n    '/useAntd/useButton' : ButtonUse,\r\n    '/useAntd/useIcon' : IconUse,\r\n    '/useAntd/useTypography' : TypographyUse,\r\n    '/useAntd/useDivider' : DividerUse,\r\n    '/useAntd/useGrid' : GridUse,\r\n}","D:\\project2git\\front\\src\\page\\userAntd\\ButtonUse\\index.tsx",["170"],"import React from \"react\";\r\n\r\nimport s from \"./index.module.scss\";\r\n\r\ninterface Iprops {}\r\n\r\nconst data = [\r\n  {\r\n    title: \"四种状态：\",\r\n    children: [\r\n      \"危险：删除/移动/修改权限等危险操作，一般需要二次确认。\",\r\n      \"禁用：行动点不可用的时候，一般需要文案解释。\",\r\n      \"幽灵：用于背景色比较复杂的地方，常用在首页/产品页等展示场景。\",\r\n      \"加载中：用于异步操作等待反馈的时候，也可以避免多次提交。\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"使用：import {Button} from `antd`\",\r\n  },\r\n  {\r\n    title: \"属性说明：\",\r\n    children: [\r\n      \"block:boolean --> 由行间块状元素变成块状元素，其宽度调整为父元素的宽度\",\r\n      \"danger:boolean --> 设置危险按钮\",\r\n      \"disabled:boolean --> 按钮失效状态\",\r\n      \"ghost:boolean --> 幽灵属性，使按钮背景透明(丧失背景，融入到环境中)\",\r\n      \"href:string --> 点击跳转的地址，指定此属性 button 的行为和 a 链接一致。a标签的href是直接填个地址，如 http://xxx.com/\",\r\n      \"htmlType:string --> 设置 button 原生的 type值。这里我好像就用过submit和默认的fefault。注意这里只接受string类型，在三元判断的时候不能写空，至少写default\",\r\n      \"icon:ReactNode --> 设置按钮的图标组件，比如<Button type=`primary` shape=`round` icon={<DownloadOutlined />} size={size} />，标签自闭合，icon将会替代之前文本的位置，如果不自闭合，有文本，icon与文本都包裹在Button内\",\r\n      \"loading:boolean --> 设置按钮进入载入状态。这个一般用于搜索按钮之类的，当上一个请求还没有回来不能进行下一个请求\",\r\n      \"shape:string --> 设置按钮形状。circle,round\",\r\n      \"size:string --> 设置按钮大小。large|middle|small\",\r\n      \"target:string --> 相当于a链接的target属性，当href存在时生效。\",\r\n      \"type:string --> 设置按钮的类型：primary | ghost | dashed | link | text | default\",\r\n      \"onClick:(event) => void  --> 点击按钮的回调\"\r\n    ],\r\n  },\r\n  {\r\n    title:\"FAQ\",\r\n    children:[\r\n      \"如何移除两个汉字之间的空格？\",\r\n      \"默认情况下，如果button中的文字只有两时，会在两字之间加间隔。通过设置autoInsertSpaceInButton 为 false去除。\"\r\n\r\n    ]\r\n  }\r\n];\r\nexport default class ButtonUse extends React.Component<any, any> {\r\n  render() {\r\n    // console.log(this.props);\r\n\r\n    return (\r\n      <div className={s[\"container\"]}>\r\n        {data.map((item, index) => {\r\n          if (item?.children?.length) {\r\n            return(\r\n              <>\r\n              <h2 key={index}>{item.title}</h2>\r\n              {\r\n                item.children.map((context,idx) => <p key={idx}>{context}</p> )\r\n              }\r\n              </>\r\n            ) \r\n          } else {\r\n            return <h2 key={index}>{item.title}</h2>\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\project2git\\front\\src\\index.tsx",[],"D:\\project2git\\front\\src\\component\\MenuView\\index.tsx",[],"D:\\project2git\\front\\src\\constData\\menus.ts",[],"D:\\project2git\\front\\src\\worker\\api.js",["171"],"let host = ''\r\nif (process.env.NODE_ENV == 'production') {\r\n    host = 'http://39.98.146.215:80/api'\r\n}\r\n\r\nconst host_api = {\r\n    auth_login: `${host}/auth/login`, // 登录,post \r\n    sunjie_search: `${host}/sunjie/search`, // 查询,get \r\n    sunjie_create: `${host}/sunjie/create`, // 新建一条记录,post \r\n}\r\n\r\n\r\nexport {\r\n    host_api,\r\n    host\r\n}","D:\\project2git\\front\\src\\page\\Header\\index.tsx",[],"D:\\project2git\\front\\src\\page\\game\\index.ts",["172"],"import Snack from './Snack'\r\n\r\n\r\nexport default {\r\n    \"/game/snack\" :Snack\r\n}","D:\\project2git\\front\\src\\page\\game\\Snack\\index.tsx",["173","174","175","176","177","178","179","180"],"import React from \"react\";\r\nimport s from \"./index.module.scss\";\r\nimport { Button, message } from \"antd\";\r\nimport snack from \"./snack\";\r\nimport { observer } from \"mobx-react\";\r\n\r\ninterface Istates {\r\n  timer: NodeJS.Timeout | undefined;\r\n}\r\n\r\n@observer\r\nexport default class Snack extends React.Component {\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.onKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.onKeyDown);\r\n  }\r\n\r\n  onKeyDown = (e) => {\r\n    switch (e.keyCode) {\r\n      case 37:\r\n        //left\r\n        if (snack.direction !== \"right\") {\r\n          snack.direction = \"left\";\r\n        }\r\n        break;\r\n      case 38:\r\n        //top\r\n        if (snack.direction !== \"bottom\") {\r\n          snack.direction = \"top\";\r\n        }\r\n        break;\r\n      case 39:\r\n        //left\r\n        if (snack.direction !== \"left\") {\r\n          snack.direction = \"right\";\r\n        }\r\n        break;\r\n      case 40:\r\n        //left\r\n        if (snack.direction !== \"top\") {\r\n          snack.direction = \"bottom\";\r\n        }\r\n        break;\r\n    }\r\n  };\r\n  state = {\r\n    stop: false,\r\n    timer: undefined,\r\n    foodPoint: {\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    speed:100/2,\r\n    level:1\r\n  };\r\n  startGame = () => {\r\n    clearInterval(this.state.timer);\r\n    this.setState({\r\n      stop: false,\r\n      foodPoint: snack.foodPoint,\r\n    });\r\n    let timer = setInterval(() => {\r\n        if(this.state.stop){\r\n            clearInterval(this.state.timer);\r\n            return\r\n        }\r\n      let nextPoint = {\r\n        x: 0,\r\n        y: 0,\r\n      };\r\n      switch (snack.direction) {\r\n        case \"right\":\r\n          nextPoint.x = snack.header.x + 1;\r\n          nextPoint.y = snack.header.y;\r\n          break;\r\n        case \"bottom\":\r\n          nextPoint.x = snack.header.x;\r\n          nextPoint.y = snack.header.y + 1;\r\n          break;\r\n        case \"left\":\r\n          nextPoint.x = snack.header.x - 1;\r\n          nextPoint.y = snack.header.y;\r\n          break;\r\n        case \"top\":\r\n          nextPoint.x = snack.header.x;\r\n          nextPoint.y = snack.header.y - 1;\r\n          break;\r\n      }\r\n      let snackPoint = [snack.tail, ...snack.body, snack.header];\r\n      console.log(snackPoint.indexOf(\r\n        (item) => item.x === nextPoint.x && item.y === nextPoint.y\r\n      ) > -1);\r\n      console.log(snackPoint,nextPoint);\r\n      \r\n      if (\r\n        snackPoint.indexOf(\r\n          (item) => item.x == nextPoint.x && item.y == nextPoint.y\r\n        ) > -1\r\n      ) {\r\n        message.error(\"笨蛋，撞到自己了\");\r\n        setTimeout(() => {\r\n          snack.reset();\r\n        }, 1000);\r\n        clearInterval(this.state.timer);\r\n        return\r\n      }\r\n      console.log(nextPoint.x, nextPoint.y, \"food\");\r\n      console.log(snack.header.x, snack.header.y, \"header\");\r\n      if (\r\n        nextPoint.x == this.state.foodPoint?.x &&\r\n        nextPoint.y == this.state.foodPoint?.y\r\n      ) {\r\n        message.info(\"吃到食物\");\r\n        snack.eatFood();\r\n        snack.showFood();\r\n        this.setState({\r\n          foodPoint: snack.foodPoint,\r\n        });\r\n      } else if (\r\n        nextPoint.x >= 0 &&\r\n        nextPoint.x <= 44 &&\r\n        nextPoint.y >= 0 &&\r\n        nextPoint.y <= 29\r\n      ) {\r\n        snack.move();\r\n      } else {\r\n        message.error(\"笨蛋，撞死了\");\r\n        setTimeout(() => {\r\n          snack.reset();\r\n        }, 1000);\r\n        this.setState({\r\n          stop: false,\r\n        });\r\n        clearInterval(this.state.timer);\r\n      }\r\n    }, this.state.speed);\r\n    this.setState({\r\n      timer,\r\n    });\r\n  };\r\n  changeLevel = (level) => {\r\n\r\n      this.setState({level,speed:level*100/2})\r\n  }\r\n  render() {\r\n    let snackPoint = [snack.tail, ...snack.body, snack.header];\r\n    console.log(snackPoint.length);\r\n    console.log(snack.foodPoint, \"==========\");\r\n\r\n    let snackLength = snackPoint.length;\r\n    return (\r\n      <div className={s[\"container\"]}>\r\n        <div className={s[\"map\"]}>\r\n          {snackPoint.map((item, index) =>\r\n            renderPoint(item, index, snackLength)\r\n          )}\r\n          {renderFood(snack.foodPoint)}\r\n          <Button\r\n            type=\"primary\"\r\n            className={s[\"startGame\"]}\r\n            onClick={this.startGame}\r\n          >\r\n            开始游戏\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            className={s[\"stopGame\"]}\r\n            onClick={() => {\r\n              this.setState({\r\n                stop: true,\r\n              });\r\n            }}\r\n          >\r\n            暂停游戏\r\n          </Button>\r\n          <div className={s['gameLevel']}>\r\n              {[1,2,3,4,5,6,7,8,9].map((item,index)=> <Button key={index} type={this.state.level == item ? 'primary' :'default'} onClick={this.changeLevel.bind(this,item)}>{item}级</Button>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst renderFood = (point: any) => (\r\n  <span\r\n    style={{\r\n      display: \"inline-block\",\r\n      width: \"20px\",\r\n      height: \"20px\",\r\n      position: \"absolute\",\r\n      left: `${point.x * 20}px `,\r\n      top: `${point.y * 20}px`,\r\n      background: \"black\",\r\n      borderRadius: \"50%\",\r\n    }}\r\n  ></span>\r\n);\r\n\r\nconst renderPoint = (point: any, index: number, snackLength: number) => {\r\n  if (index == 0) {\r\n    return (\r\n      <span\r\n        key={index}\r\n        style={{\r\n          display: \"inline-block\",\r\n          width: \"20px\",\r\n          height: \"20px\",\r\n          position: \"absolute\",\r\n          left: `${point.x * 20}px `,\r\n          top: `${point.y * 20}px`,\r\n          background: \"blue\",\r\n        }}\r\n      ></span>\r\n    );\r\n  }\r\n  if (index == snackLength - 1) {\r\n    return (\r\n      <span\r\n        key={index}\r\n        style={{\r\n          display: \"inline-block\",\r\n          width: \"20px\",\r\n          height: \"20px\",\r\n          position: \"absolute\",\r\n          left: `${point.x * 20}px `,\r\n          top: `${point.y * 20}px`,\r\n          background: \"yellow\",\r\n        }}\r\n      ></span>\r\n    );\r\n  }\r\n  return (\r\n    <span\r\n      key={index}\r\n      style={{\r\n        display: \"inline-block\",\r\n        width: \"20px\",\r\n        height: \"20px\",\r\n        position: \"absolute\",\r\n        left: `${point.x * 20}px `,\r\n        top: `${point.y * 20}px`,\r\n        background: \"red\",\r\n      }}\r\n    ></span>\r\n  );\r\n};\r\n","D:\\project2git\\front\\src\\page\\game\\Snack\\snack.ts",["181","182","183"],"\r\nimport { makeAutoObservable } from \"mobx\";\r\ninterface point {\r\n    x:number\r\n    y:number\r\n}\r\n\r\nclass Snack {\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n        this.showFood()\r\n    }\r\n\r\n    public header:point = {\r\n        x : 2,\r\n        y : 0,\r\n    }\r\n    public tail :any ={\r\n        x : 0,\r\n        y : 0\r\n    }\r\n    public body : [point] = [{x:1,y:0}]\r\n\r\n    direction = 'right'\r\n\r\n    reset = () => {\r\n        this.direction ='right'\r\n        this.header = {\r\n            x : 2,\r\n            y : 0,\r\n        }\r\n        this.body = [{x:1,y:0}]\r\n        this.tail = {\r\n            x : 0,\r\n            y : 0\r\n        }\r\n    }\r\n    foodPoint:point = {\r\n        x : 10,\r\n        y : 10\r\n    }\r\n    showFood = () => {\r\n        let point = createFood()\r\n        let snackPoints = [this.header,...this.body,this.tail]\r\n        let index =  snackPoints.indexOf((item)=> item.x == point.x && item.y == point.y)  \r\n        if (index == -1) {\r\n            this.foodPoint = point\r\n        }else{\r\n            this.showFood()\r\n        }\r\n    }\r\n    eatFood = () => {\r\n        this.body.unshift(this.header)\r\n        this.header = {...this.foodPoint}\r\n        // this.tail = this.body.pop()\r\n    }\r\n    move = () => {\r\n        switch (this.direction) {\r\n            case 'right':\r\n                this.body.unshift(this.header)\r\n                this.header = {\r\n                    x : this.header.x + 1,\r\n                    y : this.header.y\r\n                }\r\n                this.tail = this.body.pop()\r\n                break;\r\n            case 'bottom':\r\n                this.body.unshift(this.header)\r\n                this.header = {\r\n                    x : this.header.x ,\r\n                    y : this.header.y + 1\r\n                }\r\n                this.tail = this.body.pop()\r\n                break;\r\n            case 'left':\r\n                this.body.unshift(this.header)\r\n                this.header = {\r\n                    x : this.header.x - 1,\r\n                    y : this.header.y \r\n                }\r\n                this.tail = this.body.pop()\r\n                break;\r\n            case 'top':\r\n                this.body.unshift(this.header)\r\n                this.header = {\r\n                    x : this.header.x ,\r\n                    y : this.header.y - 1\r\n                }\r\n                this.tail = this.body.pop()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nconst  createFood = () => {\r\n    let x = Math.floor( Math.random() * 43)\r\n    let y = Math.floor(Math.random()* 28 )\r\n    return {x,y}\r\n}\r\nconst snack = new Snack() \r\nexport default snack","D:\\project2git\\front\\src\\page\\userAntd\\IconUse\\index.tsx",["184"],"import React from \"react\";\r\nimport s from \"./index.module.scss\";\r\n\r\n\r\n\r\ninterface Iprops {}\r\n\r\n\r\nconst data = [\r\n  {\r\n    title: \"一种办法是使用antd提供的图标，一种办法是使用阿里巴巴矢量图标库提供的图标\",\r\n    children: [\r\n      \"使用antd提供的图标：import {IconName} from `@ant-design/icons`, <IconName />\",\r\n      \"使用阿里巴巴矢量图标库提供的图标：详见本代码里面的Icon组件的使用。\"\r\n    ],\r\n  },\r\n  {\r\n    title:\"属性参数一览：\",\r\n    children:[\r\n      \"className:string  --> 设置图标的样式名。提供给它类名，就能提供类给它设置样式了。\",\r\n      \"rotate:number  --> 图标旋转角度(IE9无效)\",\r\n      \"spin:boolean  --> 是否有旋转动画\",\r\n      \"style:css  --> 设置图标的样式。设置后为行间样式\",\r\n      \"twoToneColor:string(16进制颜色) --> 仅适用双色图标。设置双色图标的主要颜色\",\r\n    ]\r\n  },\r\n  {\r\n    title:'自定义Icon接受的属性：',\r\n    children:[\r\n      \"className: \",\r\n      \"fill:  svg的填充色\",\r\n      \"height:string|number ,默认为1em\",\r\n      \"style:css\",\r\n      \"width:string|number,默认为1em  svg的宽度\"\r\n    ]\r\n  }\r\n];\r\nexport default class TypographyUse extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n      <div className={s[\"container\"]}>\r\n        {data.map((item, index) => {\r\n          if (item?.children?.length) {\r\n            return(\r\n              <>\r\n              <h2 key={index}>{item.title}</h2>\r\n              {\r\n                item.children.map((context,idx) => <p key={idx}>{context}</p> )\r\n              }\r\n              </>\r\n            ) \r\n          } else {\r\n            return <h2 key={index}>{item.title}</h2>\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\project2git\\front\\src\\page\\userAntd\\TypographyUse\\index.tsx",["185"],"import React from \"react\";\r\nimport {Typography} from 'antd'\r\nimport s from \"./index.module.scss\";\r\n\r\n\r\n\r\nconst {Title} = Typography\r\n\r\ninterface Iprops {}\r\n\r\nconst data = [\r\n  {\r\n    title: \"Typography排版\",\r\n    children: [\r\n      \"文本的基本格式。\",\r\n    ],\r\n  },\r\n  {\r\n    title:'何时适用：',\r\n    children:[\r\n      \"当需要展示标题、段落、列表内容时使用，如文章/博客/日志的文本样式。\",\r\n      \"当需要一列基于文本的基础操作时，如拷贝/省略/可编辑。\",\r\n      \"给我的感觉就是它主要是把平时我们对文本的常用功能抽离出来形成带功能的组件，方便适用。\"\r\n    ]\r\n  },\r\n  {\r\n    title:\"title的使用：\",\r\n    children : [\r\n      \"import {Typography} from `antd` \",\r\n      \"const {Title} = Typography\",\r\n      \"<Title>标题的内容</Title>\",\r\n      \"可用属性：\",\r\n      \"code:boolean  --> 添加代码样式\",\r\n      \"copyable:boolean|自定义设置 --> 是否可拷贝，为对象时进行各种自定义。\",\r\n      \"delete:boolean --> 添加删除样式线\",\r\n      \"editable:boolean|editable --> 是否可编辑，为对象时可对编辑进行控制\",\r\n      \"ellipsis:boolean|ellipsis --> 自动溢出省略，为对象时可设置省略行数、是否可展开、添加后缀等\",\r\n      \"level:number[1,2,3,4,5] --> 重要程度，相当于h1、h2、h3、h4、h5\",\r\n      \"mark:boolean --> 添加标记样式,我试了一下，大概就是文本被加了背景色以标记\",\r\n      \"type:secondary(灰色)|success(绿色)|warning(橙色)|danger(红色)\",\r\n      \"underline:boolean  --> 添加下划线样式\",\r\n      \"onChange:Function  (string)=> -->用户提交编辑内容时触发\"\r\n    ]\r\n  },\r\n  {\r\n    title:\"Text的使用：\",\r\n    children : [\r\n      \"import {Typography} from `antd` \",\r\n      \"const {Text} = Typography\",\r\n      \"<Text>文本的内容</Text>\",\r\n      \"可用属性：\",\r\n      \"code:boolean  --> 添加代码样式\",\r\n      \"copyable:boolean|自定义设置 --> 是否可拷贝，为对象时进行各种自定义。\",\r\n      \"delete:boolean --> 添加删除样式线\",\r\n      \"editable:boolean|editable --> 是否可编辑，为对象时可对编辑进行控制\",\r\n      \"ellipsis:boolean|ellipsis --> 自动溢出省略，为对象时可设置省略行数、是否可展开、添加后缀等\",\r\n      \"keyboard:boolean --> 添加键盘样式\",\r\n      \"mark:boolean --> 添加标记样式,我试了一下，大概就是文本被加了背景色以标记\",\r\n      \"type:secondary(灰色)|success(绿色)|warning(橙色)|danger(红色)\",\r\n      \"underline:boolean  --> 添加下划线样式\"\r\n    ]\r\n  },\r\n  {\r\n    title:\"Paragraph的使用：\",\r\n    children : [\r\n      \"import {Typography} from `antd` \",\r\n      \"const {Paragraph} = Typography\",\r\n      \"<Paragraph>Paragraph的内容</Paragraph>\",\r\n      \"可用属性：\",\r\n      \"code:boolean  --> 添加代码样式\",\r\n      \"copyable:boolean|自定义设置 --> 是否可拷贝，为对象时进行各种自定义。\",\r\n      \"delete:boolean --> 添加删除样式线\",\r\n      \"editable:boolean|editable --> 是否可编辑，为对象时可对编辑进行控制\",\r\n      \"ellipsis:boolean|ellipsis --> 自动溢出省略，为对象时可设置省略行数、是否可展开、添加后缀等\",\r\n      \"keyboard:boolean --> 添加键盘样式\",\r\n      \"mark:boolean --> 添加标记样式,我试了一下，大概就是文本被加了背景色以标记\",\r\n      \"type:secondary(灰色)|success(绿色)|warning(橙色)|danger(红色)\",\r\n      \"underline:boolean  --> 添加下划线样式\",\r\n      \"strong:boolean --> 是否加粗\",\r\n      \"onChange:Function  (string)=> -->用户提交编辑内容时触发\"\r\n    ]\r\n  }\r\n  \r\n];\r\nexport default class IconUse extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n      <div className={s[\"container\"]}>\r\n        <Title code={true}>code属性为true的时候的状态 var a = 10</Title>\r\n        <Title code={false} mark={false}>code属性为false的时候的状态,那就是普通标题，默认等级为h1： var a = 10</Title>\r\n\r\n        {data.map((item, index) => {\r\n          if (item?.children?.length) {\r\n            return(\r\n              <>\r\n              <h2 key={index}>{item.title}</h2>\r\n              {\r\n                item.children.map((context,idx) => <p key={idx}>{context}</p> )\r\n              }\r\n              </>\r\n            ) \r\n          } else {\r\n            return <h2 key={index}>{item.title}</h2>\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\project2git\\front\\src\\page\\userAntd\\DividerUse\\index.tsx",["186"],"import React from \"react\";\r\nimport s from \"./index.module.scss\";\r\ninterface Iprops {}\r\n\r\nconst data = [\r\n  {\r\n    title: \"Divider分割线\",\r\n    children: [\r\n      \"区隔内容的分割线。\",\r\n      \"就类似于自己写了个border-botom(功能比border-bottom丰富些)\"\r\n    ],\r\n  },\r\n  {\r\n    title:\"可设置属性:\",\r\n    children:[\r\n      \"className:string -->分割线样式类\",\r\n      \"dashed:boolean  --> 是否为虚线\",\r\n      \"orientation:left|center|right  --> 分割线标题的位置\",\r\n      \"plain:boolean  --> 文字是否显示为普通正文样式\",\r\n      \"style:  -->分割线样式对象\",\r\n      \"type:horizontal|vertical  --> 水平还是垂直类型\"\r\n    ]\r\n  }\r\n];\r\nexport default class DividerUse extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n      <div className={s[\"container\"]}>\r\n        {data.map((item, index) => {\r\n          if (item?.children?.length) {\r\n            return(\r\n              <>\r\n              <h2 key={index}>{item.title}</h2>\r\n              {\r\n                item.children.map((context,idx) => <p key={idx}>{context}</p> )\r\n              }\r\n              </>\r\n            ) \r\n          } else {\r\n            return <h2 key={index}>{item.title}</h2>\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\project2git\\front\\src\\page\\userAntd\\GridUse\\index.tsx",["187"],"import React from \"react\";\r\nimport s from \"./index.module.scss\";\r\ninterface Iprops {}\r\n\r\nconst data = [\r\n  {\r\n    title: \"Grid栅格\",\r\n    children: [\r\n      \"24栅格系统\",\r\n    ],\r\n  },\r\n  {\r\n    title:'我自己的一些理解',\r\n    children:[\r\n      \"其底层是用flex布局来实现的，在用它之前学习过flex布局会比较容易。\",\r\n      \"它主要就是把我们对flex布局的常用功能给封装成了组件，方便使用。\"\r\n    ]\r\n  },\r\n  {\r\n    \r\n  }\r\n\r\n];\r\nexport default class GridUse extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n      <div className={s[\"container\"]}>\r\n        {data.map((item, index) => {\r\n          if (item?.children?.length) {\r\n            return(\r\n              <>\r\n              <h2 key={index}>{item.title}</h2>\r\n              {\r\n                item.children.map((context,idx) => <p key={idx}>{context}</p> )\r\n              }\r\n              </>\r\n            ) \r\n          } else {\r\n            return <h2 key={index}>{item.title}</h2>\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\project2git\\front\\src\\page\\RecordWeight\\index.tsx",["188"],"import React from 'react'\r\nimport s from './index.module.scss'\r\nimport moment from 'moment'\r\nimport {observer,inject} from 'mobx-react'\r\nimport {Icon,IconTypes} from '../../component'\r\nimport {Button , Input,Divider, message} from 'antd'\r\n\r\ninterface Istates {\r\n    color:string\r\n    timer:NodeJS.Timer | null\r\n    weightData:any\r\n    wave:number | null\r\n    inputValue : string\r\n} \r\n@inject('user')\r\n@observer\r\nexport default class RecordWeight extends React.Component <any,Istates>{\r\n    state = {\r\n        color:'0,0,0',\r\n        timer:null,\r\n        weightData:[],\r\n        wave:null,\r\n        inputValue:''\r\n    }\r\n    componentDidMount(){\r\n        this.searchData()\r\n        this.setState({\r\n            timer: setInterval(()=>{this.createColor()},1000)\r\n        })\r\n        \r\n    }\r\n    commitRecord = async() => {\r\n        let reg = /^\\d+(\\.\\d+)?$/\r\n        if(!reg.test(this.state.inputValue)){\r\n            message.error(\"请输入纯数字\")\r\n            return\r\n        }\r\n        let res = await this.props.user.launch('post','sunjie_create',{currentWeight:this.state.inputValue})\r\n        this.setState({\r\n            inputValue:''\r\n        })\r\n        if(res.success){\r\n            this.searchData()\r\n        }\r\n        console.log(res);\r\n        \r\n    }\r\n    searchData = async() => {\r\n        let res = await this.props.user.launch('get','sunjie_search')\r\n        if(res.success){\r\n            if(res.record[1]){\r\n                console.log(res.record[0]['current_weight']);\r\n                console.log(Number(res.record[0]['current_weight']));\r\n                console.log(Number(res.record[1]['current_weight']));\r\n                \r\n                let wave = Number(res.record[0]['current_weight']) - Number(res.record[1]['current_weight'])\r\n                console.log(wave);\r\n                this.setState({wave})\r\n            }\r\n            this.setState({\r\n                weightData:res.record\r\n            })\r\n        }\r\n\r\n    }\r\n    createColor = () => {\r\n        let r = Math.floor(Math.random()*255)\r\n        let g = Math.floor(Math.random()*255)\r\n        let b = Math.floor(Math.random()*255)\r\n        this.setState({\r\n            color:`rgb(${r},${g},${b})`\r\n        })\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(Number(this.state.timer))\r\n    }\r\n    render(){\r\n        return (\r\n            <div className={s['container']}>\r\n                <div className={s['showInfo']}>\r\n                    <h2>今天是：{moment(new Date()).format(\"YYYY-MM-DD\")}</h2>\r\n                    <h3>欢迎你：<span style={{color:this.state.color}}>孙洁</span></h3>\r\n                    <h2>下面是你上一次的记录：</h2>\r\n                    <h1><span>{this.state.weightData[0] ? this.state.weightData[0]['current_weight'] + 'kg':'暂无记录'}</span>  </h1>\r\n                    <h1 style={{display:this.state.wave !== null? '' : 'none'}}>相比于上一期：{renderMave(this.state.wave)}</h1>\r\n                </div>\r\n                <Divider/>\r\n                <div className={s['recordRow']}>\r\n                    <h1>要不记上一笔？</h1>\r\n                    <div><Input placeholder=\"请输入你当前的体重，单位kg\" style={{width:'300px'}} value={this.state.inputValue} onChange={(e)=>{this.setState({\r\n                        inputValue:e.target.value\r\n                    })}}/></div>\r\n                    <div style={{marginTop:'30px'}}>\r\n                        <Button onClick={this.commitRecord}>提交</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst  renderMave = (mave) => {\r\n    if(mave == 0){\r\n        return <span>没有变动呐</span>\r\n    }\r\n    if(mave < 0) {\r\n        return <span>变瘦了{Math.abs(mave)} <Icon  style={{ color: 'red', fontSize: 30 }} type={IconTypes.iconxiajiang}/></span>\r\n    }\r\n    if(mave > 0) {\r\n        return <span>重了那么一点点：{Math.abs(mave)} <Icon  style={{ color: 'red', fontSize: 30 }} type={IconTypes.iconshangsheng}/></span>\r\n    }\r\n}","D:\\project2git\\front\\src\\page\\d3Learn\\index.ts",["189"],"import HelloD3 from './HelloD3'\r\n\r\nexport default {\r\n    '/d3learn/hellod3':HelloD3\r\n}\r\n\r\n","D:\\project2git\\front\\src\\page\\d3Learn\\HelloD3\\index.tsx",[],"D:\\project2git\\front\\src\\page\\useHook\\index.ts",["190"],"import HookUse1 from './HookUse1'\r\n\r\nexport default {\r\n    '/useHook/hook1':HookUse1\r\n}","D:\\project2git\\front\\src\\page\\useHook\\HookUse1\\index.tsx",["191","192","193"],"import React, { useState } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport Instance1 from \"./Instance1\";\r\nimport Instance2 from \"./Instance2\";\r\n\r\nexport default () => {\r\n  // 声明一个新的叫做 “count” 的 state 变量\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter={16}>\r\n        <Col span={8}>\r\n          <div>hook -- useState</div>\r\n          <Instance1 />\r\n        </Col>\r\n        <Col span={8}>\r\n          <div>hook -- useEffect</div>\r\n          <Instance2 />\r\n        </Col>\r\n        <Col span={8}></Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","D:\\project2git\\front\\src\\page\\useHook\\HookUse1\\Instance1\\index.tsx",["194"],"import React, { useState } from 'react';\r\n\r\nexport default  () => {\r\n  // 声明一个新的叫做 “count” 的 state 变量\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n      </button>\r\n    </div>\r\n  );\r\n}","D:\\project2git\\front\\src\\page\\useHook\\HookUse1\\Instance2\\index.tsx",["195"],"import React, { useState, useEffect } from 'react';\r\n\r\nexport default () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  // 相当于 componentDidMount 和 componentDidUpdate:\r\n  useEffect(() => {\r\n    // 使用浏览器的 API 更新页面标题\r\n    document.title = `You clicked ${count} times`;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n      </button>\r\n    </div>\r\n  );\r\n}","D:\\project2git\\front\\src\\page\\other\\index.ts",["196"],"import TestRadio from './TestRadio'\r\n\r\nexport default {\r\n    '/other/radio':TestRadio\r\n}","D:\\project2git\\front\\src\\page\\other\\TestRadio\\index.tsx",[],"D:\\project2git\\front\\src\\page\\browserHistory.ts",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":17},{"ruleId":"205","severity":1,"message":"206","line":4,"column":1,"nodeType":"207","endLine":6,"endColumn":2},{"ruleId":"201","severity":1,"message":"208","line":4,"column":23,"nodeType":"203","messageId":"204","endLine":4,"endColumn":31},{"ruleId":"201","severity":1,"message":"209","line":4,"column":33,"nodeType":"203","messageId":"204","endLine":4,"endColumn":36},{"ruleId":"201","severity":1,"message":"210","line":4,"column":38,"nodeType":"203","messageId":"204","endLine":4,"endColumn":41},{"ruleId":"205","severity":1,"message":"206","line":7,"column":1,"nodeType":"207","endLine":13,"endColumn":2},{"ruleId":"201","severity":1,"message":"211","line":5,"column":11,"nodeType":"203","messageId":"204","endLine":5,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":2,"column":26,"nodeType":"214","messageId":"215","endLine":2,"endColumn":28},{"ruleId":"205","severity":1,"message":"206","line":4,"column":1,"nodeType":"207","endLine":6,"endColumn":2},{"ruleId":"201","severity":1,"message":"216","line":7,"column":11,"nodeType":"203","messageId":"204","endLine":7,"endColumn":18},{"ruleId":"212","severity":1,"message":"213","line":100,"column":28,"nodeType":"214","messageId":"215","endLine":100,"endColumn":30},{"ruleId":"212","severity":1,"message":"213","line":100,"column":53,"nodeType":"214","messageId":"215","endLine":100,"endColumn":55},{"ruleId":"212","severity":1,"message":"213","line":113,"column":21,"nodeType":"214","messageId":"215","endLine":113,"endColumn":23},{"ruleId":"212","severity":1,"message":"213","line":114,"column":21,"nodeType":"214","messageId":"215","endLine":114,"endColumn":23},{"ruleId":"212","severity":1,"message":"213","line":180,"column":98,"nodeType":"214","messageId":"215","endLine":180,"endColumn":100},{"ruleId":"212","severity":1,"message":"213","line":204,"column":13,"nodeType":"214","messageId":"215","endLine":204,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":220,"column":13,"nodeType":"214","messageId":"215","endLine":220,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":45,"column":58,"nodeType":"214","messageId":"215","endLine":45,"endColumn":60},{"ruleId":"212","severity":1,"message":"213","line":45,"column":79,"nodeType":"214","messageId":"215","endLine":45,"endColumn":81},{"ruleId":"212","severity":1,"message":"213","line":46,"column":19,"nodeType":"214","messageId":"215","endLine":46,"endColumn":21},{"ruleId":"201","severity":1,"message":"211","line":6,"column":11,"nodeType":"203","messageId":"204","endLine":6,"endColumn":17},{"ruleId":"201","severity":1,"message":"211","line":9,"column":11,"nodeType":"203","messageId":"204","endLine":9,"endColumn":17},{"ruleId":"201","severity":1,"message":"211","line":3,"column":11,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"201","severity":1,"message":"211","line":3,"column":11,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":103,"column":13,"nodeType":"214","messageId":"215","endLine":103,"endColumn":15},{"ruleId":"205","severity":1,"message":"206","line":3,"column":1,"nodeType":"207","endLine":5,"endColumn":2},{"ruleId":"205","severity":1,"message":"206","line":3,"column":1,"nodeType":"207","endLine":5,"endColumn":2},{"ruleId":"205","severity":1,"message":"217","line":6,"column":1,"nodeType":"207","endLine":25,"endColumn":3},{"ruleId":"201","severity":1,"message":"218","line":8,"column":10,"nodeType":"203","messageId":"204","endLine":8,"endColumn":15},{"ruleId":"201","severity":1,"message":"219","line":8,"column":17,"nodeType":"203","messageId":"204","endLine":8,"endColumn":25},{"ruleId":"205","severity":1,"message":"217","line":3,"column":1,"nodeType":"207","endLine":15,"endColumn":2},{"ruleId":"205","severity":1,"message":"217","line":3,"column":1,"nodeType":"207","endLine":20,"endColumn":2},{"ruleId":"205","severity":1,"message":"206","line":3,"column":1,"nodeType":"207","endLine":5,"endColumn":2},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"@typescript-eslint/no-unused-vars","'LoginPage' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Checkbox' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Iprops' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Istates' is defined but never used.","Assign arrow function to a variable before exporting as module default","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]